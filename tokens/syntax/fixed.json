{
  "syntax": {
    "keyword": {
      "value": "{ref.purple.60}",
      "type": "color",
      "description": "Pre-defined and reserved words."
    },
    "builtins": {
      "value": "{syntax.keyword}",
      "type": "color",
      "description": "Functions/Methods/Classes/Types that are available out of the box."
    },
    "class-name": {
      "value": "{ref.blue.30}",
      "type": "color",
      "description": "The name of a class, interface, trait, or type."
    },
    "function-call": {
      "value": "{ref.green.60}",
      "type": "color",
      "description": "The name of a function or method when called"
    },
    "function-definition": {
      "value": "{ref.green.60}",
      "type": "color",
      "description": "Used for a function name when it is defined, as oppose to when it is called."
    },
    "boolean": {
      "value": "{ref.yellow.50}",
      "type": "color",
      "description": "True and false, and pairs with similar concepts (e.g. yes and no)."
    },
    "number": {
      "value": "{ref.red.60}",
      "type": "color",
      "description": "A numerical value, regardless of base and order, and no matter real or imaginary."
    },
    "string": {
      "value": "{ref.purple.40}",
      "type": "color",
      "description": "Literal text, including numbers and symbols and maybe even more special characters."
    },
    "double-quote-string": {
      "value": "{syntax.string}",
      "type": "color"
    },
    "triple-quote-string": {
      "value": "{syntax.string}",
      "type": "color"
    },
    "char": {
      "value": "{syntax.string}",
      "type": "color",
      "description": "A string that can comprise only a single character, enforced by the language."
    },
    "symbol": {
      "value": "{syntax.variable}",
      "type": "color",
      "description": "A primitive data type found in some languages, can be thought of as an identifier."
    },
    "regex": {
      "value": "{syntax.variable}",
      "type": "color",
      "description": "A regular expression."
    },
    "url": {
      "value": "{syntax.string}",
      "type": "color",
      "description": "A link to another page or resource."
    },
    "operator": {
      "value": "{ref.purple.60}",
      "type": "color",
      "description": "A symbol that represents an action or process, whether it's a mathematical operation, logical operation, and so on."
    },
    "variable": {
      "value": "{ref.blue.60}",
      "type": "color",
      "description": "The name of a variable. This token is intended to be used sparingly. It's generally used on special variables (e.g. Less or Bash), not general variables from imperative and procedural programming languages (e.g. C, JavaScript, Python)."
    },
    "constant": {
      "value": "{syntax.variable}",
      "type": "color",
      "description": "The name of a constant."
    },
    "property": {
      "value": "{syntax.plain.foreground}",
      "type": "color",
      "description": "An attribute/characteristic or object/map key."
    },
    "punctuation": {
      "value": "rgba({syntax.plain.foreground}, 64%)",
      "type": "color",
      "description": "Punctuation such as brackets, parentheses, commas, and more."
    },
    "important": {
      "value": "{ref.red.60}",
      "type": "color",
      "description": "Anything that is important and needs special highlighting."
    },
    "comment": {
      "value": "rgba({ref.grey.60}, 80%)",
      "type": "color",
      "description": "Code comments.\n"
    },
    "diff": {
      "inserted": {
        "value": "{ref.green.130}",
        "type": "color"
      },
      "deleted": {
        "value": "{ref.red.130}",
        "type": "color"
      }
    },
    "plain": {
      "background": {
        "value": "{ref.grey.140}",
        "type": "color",
        "description": "Background color for code blocks"
      },
      "foreground": {
        "value": "{ref.grey.30}",
        "type": "color",
        "description": "Foreground color for non-tokenized elements within the syntax"
      },
      "line-number": {
        "value": "rgba({syntax.plain.foreground}, 50%)",
        "type": "color",
        "description": "Foreground color for non-tokenized elements within the syntax"
      },
      "border": {
        "value": "{ref.grey.120}",
        "type": "color",
        "description": "Foreground color for non-tokenized elements within the syntax"
      }
    }
  },
  "line-number-container": {
    "default": {
      "value": {
        "fill": "rgba( {ref.grey.140} , 0%)"
      },
      "type": "composition"
    },
    "scrolled": {
      "value": {
        "fill": "rgba( {ref.grey.140} , 80%)",
        "backgroundBlur": "4px",
        "borderWidthRight": "0.5px",
        "borderColor": "{syntax.plain.border}"
      },
      "type": "composition"
    }
  }
}